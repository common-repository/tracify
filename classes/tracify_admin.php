<?php
 class TracifyAdmin { private $tracify_options; public function __construct() { $this->tracify_options = get_option('tracify_options'); add_action('admin_menu', array($this, 'add_plugin_page')); add_action('admin_init', array($this, 'init_admin_page')); add_action('admin_enqueue_scripts', array($this, 'enqueue_assets')); } public function add_plugin_page() { add_options_page( 'Tracify', 'Tracify', 'manage_options', 'tracify', array($this, 'render_admin_page') ); } public function render_admin_page() { $logo_image_url = TRACIFY_DIR_URL . 'img/tracify-logo.png'; require_once TRACIFY_DIR_PATH . 'views/admin/settings.php'; } public function init_admin_page() { register_setting( 'tracify_option_group', 'tracify_options', array($this, 'sanitize_settings') ); add_settings_section( 'tracify_setting_section', '', array($this, 'render_setting_header'), 'tracify-admin' ); add_settings_field( 'csid', 'CSID', array($this, 'csid_callback'), 'tracify-admin', 'tracify_setting_section' ); add_settings_field( 'tracify-token', 'Tracify Token', array($this, 'tracify_token_callback'), 'tracify-admin', 'tracify_setting_section' ); add_settings_section( 'tracify_settings_advanced_section', '', array($this, 'render_setting_advanced_header'), 'tracify-admin' ); add_settings_field( 'fingerprinting', 'Enable fingerprinting', array($this, 'fingerprinting'), 'tracify-admin', 'tracify_settings_advanced_section' ); add_settings_field( 'beta-mode', 'Enable latest beta features', array($this, 'beta_mode'), 'tracify-admin', 'tracify_settings_advanced_section' ); add_settings_field( 'development-mode', 'Enable development mode', array($this, 'development_mode'), 'tracify-admin', 'tracify_settings_advanced_section' ); add_settings_section( 'tracify_setting_orders_section', '', array($this, 'render_setting_orders_header'), 'tracify-admin' ); add_settings_field( 'orders-when-processing', 'When Processing', array($this, 'orders_when_processing_callback'), 'tracify-admin', 'tracify_setting_orders_section' ); add_settings_field( 'orders-when-on-hold', 'When On-Hold', array($this, 'orders_when_on_hold_callback'), 'tracify-admin', 'tracify_setting_orders_section' ); add_settings_field( 'orders-when-completed', 'When Completed', array($this, 'orders_when_completed_callback'), 'tracify-admin', 'tracify_setting_orders_section' ); } public function orders_when_processing_callback() { printf('<input type="checkbox" name="tracify_options[orders-when-processing]" value="1" ' . checked(1, $this->tracify_options['orders-when-processing'], false) . '/>'); } public function orders_when_on_hold_callback() { printf('<input type="checkbox" name="tracify_options[orders-when-on-hold]" value="1" ' . checked(1, $this->tracify_options['orders-when-on-hold'], false) . '/>'); } public function orders_when_completed_callback() { printf('<input type="checkbox" name="tracify_options[orders-when-completed]" value="1" ' . checked(1, $this->tracify_options['orders-when-completed'], false) . '/>'); } public function development_mode() { printf('<input type="checkbox" name="tracify_options[development-mode]" value="1" ' . checked(1, $this->tracify_options['development-mode'], false) . '/>'); } public function fingerprinting() { printf('<input type="checkbox" name="tracify_options[fingerprinting]" value="1" ' . checked(1, $this->tracify_options['fingerprinting'], false) . '/>'); } public function beta_mode() { printf('<input type="checkbox" name="tracify_options[beta-mode]" value="1" ' . checked(1, $this->tracify_options['beta-mode'], false) . '/>'); } public function render_setting_header() { $logo_image_url = TRACIFY_DIR_URL . 'img/tracify-logo.png'; require_once TRACIFY_DIR_PATH . 'views/admin/settings_header.php'; } public function render_setting_orders_header() { require_once TRACIFY_DIR_PATH . 'views/admin/settings_orders_header.php'; } public function render_setting_advanced_header() { require_once TRACIFY_DIR_PATH . 'views/admin/settings_advanced_header.php'; } private function validate_uuid($input) { return (bool) preg_match('/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i', $input); } public function sanitize_settings($input) { $sanitary_values = array(); if (isset($input['csid'])) { if (!$this->validate_uuid($input['csid'])) { $sanitary_values['csid'] = $this->tracify_options['csid']; add_settings_error('csid', 'invalid_csid', 'Invalid CSID entered. Please enter a valid CSID.', 'error'); } else { $sanitary_values['csid'] = sanitize_text_field($input['csid']); } } if (isset($input['tracify-token'])) { $sanitary_values['tracify-token'] = sanitize_text_field($input['tracify-token']); } $boolean_fields = array( 'beta-mode', 'development-mode', 'fingerprinting', 'orders-when-completed', 'orders-when-on-hold', 'orders-when-processing', ); foreach ($boolean_fields as $field_name) { if ($input[$field_name] == "1") { $sanitary_values[$field_name] = "1"; } else { $sanitary_values[$field_name] = "0"; } } return $sanitary_values; } public function csid_callback() { printf( '<input class="regular-text" type="text" name="tracify_options[csid]" id="csid" value="%s" required>', isset($this->tracify_options['csid']) ? esc_attr($this->tracify_options['csid']) : '' ); } public function tracify_token_callback() { printf( '<input class="regular-text" type="text" name="tracify_options[tracify-token]" id="tracify-token" value="%s" required>', isset($this->tracify_options['tracify-token']) ? esc_attr($this->tracify_options['tracify-token']) : '' ); } public function enqueue_assets() { if (!isset($_GET['page']) || $_GET['page'] !== 'tracify') { return; } wp_enqueue_style('tracify-admin-styles', TRACIFY_DIR_URL . 'css/admin.css', [], TRACIFY_PLUGIN_VER); } }